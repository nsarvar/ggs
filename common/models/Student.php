<?php

namespace common\models;

use Faker\Provider\File;
use Yii;
use yii\web\UploadedFile;

/**
 * This is the model class for table "student".
 *
 * @property int $id
 * @property string $code
 * @property string $fname
 * @property string $lname
 * @property string $bdate
 * @property string $email
 * @property string $passport
 * @property string $address
 * @property string $phone
 * @property int $avatar
 * @property bool $gender
 * @property int $parent_id
 * @property string $created_at
 * @property string $updated_at
 *
 * @property CourseEnroll[] $courseEnrolls
 * @property Grades[] $grades
 * @property Parent $parent
 */
class Student extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'student';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['code', 'fname', 'lname', 'bdate', 'email', 'passport', 'address', 'phone', 'created_at', 'updated_at', 'gender'], 'required'],
            [['bdate', 'created_at', 'updated_at'], 'safe'],
            [['address'], 'string'],
            [['code', 'fname', 'lname'], 'string', 'max' => 50],
            [['email'], 'string', 'max' => 100],
            [['gender'], 'integer'],
            ['email','email'],
            [['passport', 'phone'], 'string', 'max' => 20],
            [['parent_id'], 'exist', 'skipOnError' => true, 'targetClass' => Parent::className(), 'targetAttribute' => ['parent_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('main', 'ID'),
            'code' => Yii::t('main', 'Code'),
            'fname' => Yii::t('main', 'Fname'),
            'lname' => Yii::t('main', 'Lname'),
            'bdate' => Yii::t('main', 'Bdate'),
            'email' => Yii::t('main', 'Email'),
            'passport' => Yii::t('main', 'Passport'),
            'address' => Yii::t('main', 'Address'),
            'phone' => Yii::t('main', 'Phone'),
            'avatar' => Yii::t('main', 'Avatar'),
            'gender' => Yii::t('main', 'Gender'),
            'parent_id' => Yii::t('main', 'Parent ID'),
            'created_at' => Yii::t('main', 'Created At'),
            'updated_at' => Yii::t('main', 'Updated At'),
            'avatarImage' => Yii::t('main', 'Avatar Image'),
            'fullName' => Yii::t('main', 'Full Name'),
            'genderName' => Yii::t('main', 'Gender')
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCourseEnrolls()
    {
        return $this->hasMany(CourseEnroll::className(), ['student_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGrades()
    {
        return $this->hasMany(Grades::className(), ['student_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getParent()
    {
        return $this->hasOne(Parent::className(), ['id' => 'parent_id']);
    }

    public function save($runValidation = true, $attributeNames = null)
    {
        if($this->isNewRecord) {
            $this->created_at = date('Y-m-d H:i:s');
            $this->updated_at = $this->created_at;
        } else {
            $this->updated_at = date('Y-m-d H:i:s');
        }

        $file = UploadedFile::getInstance($this, 'avatar');
        if(!empty($file)) {
            $this->avatar = Files::saveFile($file,$this->avatar);
        }
        $result =  parent::save($runValidation, $attributeNames); // TODO: Change the autogenerated stub
        if($result) {
            $this->code = $this->generateCode();
            return parent::save($runValidation, $attributeNames);
        }
        return $result;

    }

    public function getAvatarModel() {
        $model = Files::findOne($this->avatar);
        return empty($model) ? false : $model ;
    }

    public function getAvatarImage() {
        if(!empty($this->avatarModel) && $this->avatarModel->hasFile)
            return $this->avatarModel->absoluteLink;
        return '/default/avatar.png';
    }

    /**
     * @return bool
     * @throws \Exception
     * @throws \Throwable
     * @throws \yii\db\StaleObjectException
     */
    public function beforeDelete()
    {
        $model = Files::findOne($this->avatar);
        if(!empty($model))
            $model->delete();

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getFullName() {
        return $this->lname . ' ' . $this->fname;
    }

    public function getGenderName() {
        if($this->gender == 0)
            return Yii::t('main','Ayol');
        elseif ($this->gender == 1)
            return Yii::t('main','Erkak');
        return Yii::t('main','Qiymatlanmagan');
    }

    public function generateCode() {
        $str = 'S' . date('y') . $this->gender;
        for ($i=0;$i<4-strlen((string)$this->id);$i++) {
            $str .= '0';
        }
        $str .= $this->id;
        return $str;
    }

}
